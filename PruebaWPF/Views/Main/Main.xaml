  <Window x:Class="PruebaWPF.Views.Main.frmMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PruebaWPF.Views.Main"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:shell="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        mc:Ignorable="d" 
        MinHeight="600" MinWidth="600"
        WindowState="Maximized"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        Title="Sistema de Gestión Financiera" 
        Height="600" Width="auto" 
        WindowStartupLocation="CenterScreen" 
        Closed="Window_Closed" SizeChanged="Window_SizeChanged"
        
        >
    <!--<WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"/>
    </WindowChrome.WindowChrome>-->
    <!--<Window.Style>
        <Style TargetType="{x:Type Window}">

            <Setter Property="Foreground" Value="White"/>
            <Setter Property="shell:WindowChrome.WindowChrome">
                <Setter.Value>
                    <shell:WindowChrome CaptionHeight="0"
                                        CornerRadius="1"
                                        GlassFrameThickness="0"
                                        NonClientFrameEdges="None"
                                        ResizeBorderThickness="1"
                                        />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <Border   Background="#424242"  BorderThickness="0" 
                             CornerRadius="3">
                                <Border.Effect>
                                    <BlurEffect  KernelType="Gaussian" Radius="1" RenderingBias="Quality" />
                                </Border.Effect>
                            </Border>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30">

                                    </RowDefinition>
                                    <RowDefinition Height="*">

                                    </RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Margin="5 0 2 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0"  VerticalAlignment="Center" HorizontalAlignment="Left" Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="10 10 10 0" Kind="Message" ></materialDesign:PackIcon>
                                        <TextBlock Foreground="White" Margin="0 10 20 0" FontWeight="Bold" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" ></TextBlock>
                                    </StackPanel>
                                    <StackPanel WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="1"  Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                        <Button Foreground="White" BorderBrush="Transparent" x:Name="minimize" Click="minimize_Click" Padding="0" Width="40" Height="30">
                                            <materialDesign:PackIcon Kind="WindowMinimize" Height="15" Width="15"></materialDesign:PackIcon>
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#757575"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        
                                        <Button Height="30" Width="40" Foreground="White" x:Name="maximize" BorderBrush="Transparent" Click="maximize_Click"  Padding="0">
                                            <materialDesign:PackIcon Height="15" Width="15" Kind="WindowMaximize"></materialDesign:PackIcon>
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#757575"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding ElementName= btnswitch,Path=IsChecked}" Value="true">
                                                            <Setter Property="Button.Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=btnswitch,Path=IsChecked}" Value="false">
                                                            <Setter Property="Button.Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button Foreground="White" Height="30" Width="40" x:Name="restore"  BorderBrush="Transparent"  Click="restore_Click" Margin="0" Padding="0">
                                            <materialDesign:PackIcon Kind="WindowRestore" Height="15" Width="15"></materialDesign:PackIcon>
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#757575"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding ElementName= btnswitch,Path=IsChecked}" Value="false">
                                                            <Setter Property="Button.Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName= btnswitch,Path=IsChecked}" Value="true">
                                                            <Setter Property="Button.Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button Foreground="White" Height="30" Width="40" x:Name="close" BorderBrush="Transparent" Click="close_Click" Margin="0" Padding="0">
                                            <materialDesign:PackIcon Kind="WindowClose" Height="15" Width="15"></materialDesign:PackIcon>
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="{StaticResource CloseButton_Dark}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#f44336"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>

                                </Grid>


                                <ContentPresenter Grid.Row="1" Margin="5 0 3 5"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Style>-->
    <Grid>

        <DockPanel>
            <!--Menú-->
            <StackPanel DockPanel.Dock="Top" x:Name="panelMenu" >
                <ToggleButton x:Name="btnswitch" IsChecked="True" Visibility="Collapsed"></ToggleButton>
                <Menu materialDesign:ShadowAssist.ShadowDepth="Depth5"  x:Name="MenuOpciones" HorizontalAlignment="Stretch" Height="auto" Background="#616161" Foreground="white" IsMainMenu="True" FontSize="13">
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <DockPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>

                    <MenuItem Height="30" x:Name="mnUsuario" HorizontalAlignment="Right"  Header="Usuario">
                        <MenuItem.Icon >
                            <materialDesign:PackIcon Kind="Account"></materialDesign:PackIcon>
                        </MenuItem.Icon>
                        <MenuItem Header="Mis Accesos Directos">
                            <MenuItem.Icon >
                                <materialDesign:PackIcon Kind="Store" ></materialDesign:PackIcon>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem  Header="Configuración" Click="MenuItem_Click_1">
                            <MenuItem.Icon >
                                <materialDesign:PackIcon Kind="Settings" ></materialDesign:PackIcon>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem x:Name="miLogout" Header="Cerrar Sesión" Click="MenuItem_Click" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Logout" ></materialDesign:PackIcon>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>

            </StackPanel>

            <!--Barra de Estado-->
            <StatusBar DockPanel.Dock="Bottom" Background="#01579B" Foreground="{StaticResource TextoBlanco}">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>


                <StatusBarItem Grid.Column="0" Margin="0 0 20 0">
                    <TextBlock >
                        <TextBlock.Inlines>
                            <Run Text="Perfil:" ></Run>
                            <Run Name="lblPerfil"></Run>
                        </TextBlock.Inlines>
                    </TextBlock>
                </StatusBarItem>


                <StatusBarItem Grid.Column="1" Margin="0 0 20 0">
                    <TextBlock>
                        <TextBlock.Inlines>
                            <Run Text="Periodo:"></Run>
                            <Run Name="lblPeriodo"></Run>
                        </TextBlock.Inlines>
                    </TextBlock>
                </StatusBarItem>


                <StatusBarItem Grid.Column="2" Margin="0 0 20 0">
                    <TextBlock >
                        <TextBlock.Inlines>
                            <Run Text="T/C:"></Run>
                            <Run Name="lblTipoCambio"></Run>
                        </TextBlock.Inlines>
                    </TextBlock>
                </StatusBarItem>
                
                <StatusBarItem Grid.Column="3" Margin="0 0 20 0">
                    <TextBlock >
                        <TextBlock.Inlines>
                            <Run Text="MAC:"></Run>
                            <Run Name="lblMac"></Run>
                        </TextBlock.Inlines>
                    </TextBlock>
                </StatusBarItem>
                
                <StatusBarItem Grid.Column="4" Padding="0.8" HorizontalAlignment="Right" x:Name="layoutRoot">
                    <Button x:Name="btnNotificaciones" Visibility="Hidden" Padding="42 2 42 2" BorderBrush="Transparent"  Background="Transparent" FontSize="13" FontWeight="Regular" Height="auto" ContextMenuService.IsEnabled="False" Click="btnNotificaciones_Click">
                        <Button.Content>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBlock x:Name="txtNotificacion" Text="0" VerticalAlignment="Center" Margin="0 0 10 0"  FontWeight="Bold"/>
                                <materialDesign:PackIcon Kind="Bell" Width="17" Height="17"></materialDesign:PackIcon>
                            </StackPanel>
                        </Button.Content>
                        <Button.ContextMenu>
                            <ContextMenu FontSize="13" >
                                <!--Aqui se agregan los MenuItems mediante código-->
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </StatusBarItem>

                <StatusBarItem x:Name="Label_Exportando" Grid.Column="5" Visibility="Collapsed">
                    <TextBlock  x:Name="txtExporting" Text="Exportando datos a Excel..." VerticalAlignment="Center" Margin="0 0 10 0" Foreground="White" ToolTip="Estamos exportando información, le avisaremos cuando hayamos terminado"/>
                </StatusBarItem>

            </StatusBar>

            <!--Espacio del dashboard-->
            <DockPanel Background="#EEEEEE">
                <ScrollViewer  VerticalScrollBarVisibility="auto" >
                    <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="MainContainer">
                        <!--<Frame HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" Source="../OrdenPago/OrdenPago.xaml"/>-->
                    </DockPanel>
                </ScrollViewer>

            </DockPanel>
        </DockPanel>

    </Grid>
</Window>
